"""
Django settings for rd_data_management project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from .loader import load_credential

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rp^__$e!x22b2xjyqvqhj#odk*brxn3=gxz!(x)%8=!957!_rc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rd_data_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rd_data_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': 'testset.cluster-cvy8leytggjq.ap-northeast-2.rds.amazonaws.com',
        'NAME': os.getenv('DATABASE_NAME', 'expr_testset'),
        'USER': 'root',
        'PASSWORD': load_credential('DATABASE_PASSWORD', ""),
        'PORT': '3306',
        'OPTIONS': {
            "init_command": "SET foreign_key_checks = 0;",
        }
    },
    'qanda': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': load_credential('PROD_QANDA_DATABASE_HOST', ""),
        'USER': load_credential('PROD_QANDA_DATABASE_USER', ""),
        'PASSWORD': load_credential('PROD_QANDA_DATABASE_PASSWORD', ""),
        'NAME': load_credential('PROD_QANDA_DATABASE_NAME', ""),
    },
    'qanda_readonly': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': load_credential('PROD_QANDA_READONLY_DATABASE_HOST', ""),
        'USER': load_credential('PROD_QANDA_READONLY_DATABASE_USER', ""),
        'PASSWORD': load_credential('PROD_QANDA_READONLY_DATABASE_PASSWORD', ""),
        'NAME': load_credential('PROD_QANDA_READONLY_DATABASE_NAME', ""),
    },
    'qbase_primary': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'rds-qbase-primary-postgres.mathpresso.co.kr',
        'NAME': 'qbase_primary_prod',
        'USER': 'root',
        'PORT': '5432',
        'PASSWORD': load_credential('PROD_QBASE_ROOT_PASSWORD', "")
    },
    'qbase_readonly': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'rds-qbase-primary-postgres.mathpresso.co.kr',
        'NAME': 'qbase_primary_prod',
        'USER': 'readonly',
        'PORT': '5432',
        'PASSWORD': load_credential('PROD_QBASE_READONLY_PASSWORD', "")
    },
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False



DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = load_credential("AWS_ACCESS_KEY_ID", "")
AWS_SECRET_ACCESS_KEY = load_credential("AWS_SECRET_ACCESS_KEY", "")
AWS_STORAGE_BUCKET_NAME = 'testset-storage'
AWS_S3_REGION_NAME = 'ap-northeast-2'
AWS_S3_HOST = 's3.%s.amazonaws.com' % AWS_S3_REGION_NAME
AWS_QUERYSTRING_AUTH = False
AWS_S3_FILE_OVERWRITE = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_LOCATION = 'static'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, STATIC_LOCATION)
STATICFILES_STORAGE = 'SRboxing.custom_storages.StaticStorage'
MEDIA_LOCATION = 'media'
MEDIA_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, MEDIA_LOCATION)

# REST FRAMEWORK CONFIGURATION

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 300
}
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/


